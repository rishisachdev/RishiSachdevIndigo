package com.airlineNotificationSystem.demo.service;

import com.airlineNotificationSystem.demo.model.FlightNotification;
import com.airlineNotificationSystem.demo.repository.FlightNotificationRepository;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class FlightPollingService {

    private final FlightNotificationRepository flightNotificationRepository;
    private final RabbitTemplate rabbitTemplate;

    public FlightPollingService(FlightNotificationRepository flightNotificationRepository, RabbitTemplate rabbitTemplate) {
        this.flightNotificationRepository = flightNotificationRepository;
        this.rabbitTemplate = rabbitTemplate;
    }

    @Scheduled(fixedRate = 5000) // Poll every 5 seconds
    public void pollForFlightStatusChanges() {
        List<FlightNotification> notifications = flightNotificationRepository.findAll();
        
        for (FlightNotification notification : notifications) {
            // Send notification to RabbitMQ
            rabbitTemplate.convertAndSend("flightStatusExchange", "flightStatusRoutingKey", notification);
            // Delete the notification from the database after processing
            flightNotificationRepository.delete(notification);
        }
    }
}
