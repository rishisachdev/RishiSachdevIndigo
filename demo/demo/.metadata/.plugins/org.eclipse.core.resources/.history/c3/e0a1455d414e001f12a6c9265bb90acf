package com.airlineNotificationSystem.demo.service;

import com.airlineNotificationSystem.demo.model.FlightNotification;
import com.airlineNotificationSystem.demo.repository.FlightNotificationRepository;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.List;

import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

@Service
public class FlightPollingService {

    @Autowired
    private RabbitTemplate rabbitTemplate;

    @Autowired
    private FlightNotificationRepository flightNotificationRepository;

    @Autowired
    private ObjectMapper objectMapper;

    @Scheduled(fixedRate = 60000)  // Poll every minute
    public void pollForFlightStatusChanges() {
        List<FlightNotification> notifications = flightNotificationRepository.findAll();
        for (FlightNotification notification : notifications) {
            try {
                String message = objectMapper.writeValueAsString(notification);
                rabbitTemplate.convertAndSend("your_exchange", "your_routing_key", message);
            } catch (JsonProcessingException e) {
                e.printStackTrace();
            }
        }
    }
}
